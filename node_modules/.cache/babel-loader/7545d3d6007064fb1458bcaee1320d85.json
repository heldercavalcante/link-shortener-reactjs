{"ast":null,"code":"// Buscar os Links salvos.\nasync function getLinksSave(key) {\n  const myLinks = await localStorage.getItem(key);\n  let linksSaves = JSON.parse(myLinks) || [];\n  return linksSaves;\n}\n\nexport default getLinksSave; // Salvar um link no localstorage.\n\nexport async function saveLink(key, newLink) {\n  let linksStored = await getLinksSave(key); //Se já tiver um link salvo com algum ID eu não vou deixar duplicar\n\n  const hasLink = linksStored.some(link => link.id === newLink.id);\n\n  if (hasLink) {\n    console.log('Esse LINK já existe na sua lista!');\n    return;\n  } //Adicionar esse novo link na lista..\n\n\n  linksStored.push(newLink);\n  await localStorage.setItem(key, JSON.stringify(linksStored));\n  console.log('LINK salvo com sucesso');\n} //Deletar um link já salvo.","map":{"version":3,"sources":["/home/helder/aplications/cursos/frontend/semana-reactjs/encurtador/mylink/src/services/storeLinks.js"],"names":["getLinksSave","key","myLinks","localStorage","getItem","linksSaves","JSON","parse","saveLink","newLink","linksStored","hasLink","some","link","id","console","log","push","setItem","stringify"],"mappings":"AAAA;AAEA,eAAeA,YAAf,CAA4BC,GAA5B,EAAiC;AAC/B,QAAMC,OAAO,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAtB;AAEA,MAAII,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAX,KAAuB,EAAxC;AAEA,SAAOG,UAAP;AACD;;AACD,eAAeL,YAAf,C,CAGA;;AAEA,OAAO,eAAeQ,QAAf,CAAwBP,GAAxB,EAA6BQ,OAA7B,EAAsC;AAC3C,MAAIC,WAAW,GAAG,MAAMV,YAAY,CAACC,GAAD,CAApC,CAD2C,CAG3C;;AACA,QAAMU,OAAO,GAAGD,WAAW,CAACE,IAAZ,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA9C,CAAhB;;AAEA,MAAIH,OAAJ,EAAa;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA;AACD,GAT0C,CAW3C;;;AACAN,EAAAA,WAAW,CAACO,IAAZ,CAAiBR,OAAjB;AACA,QAAMN,YAAY,CAACe,OAAb,CAAqBjB,GAArB,EAA0BK,IAAI,CAACa,SAAL,CAAeT,WAAf,CAA1B,CAAN;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,C,CAED","sourcesContent":["// Buscar os Links salvos.\n\nasync function getLinksSave(key) {\n  const myLinks = await localStorage.getItem(key)\n\n  let linksSaves = JSON.parse(myLinks) || [];\n\n  return linksSaves;\n}\nexport default getLinksSave;\n\n\n// Salvar um link no localstorage.\n\nexport async function saveLink(key, newLink) {\n  let linksStored = await getLinksSave(key);\n\n  //Se já tiver um link salvo com algum ID eu não vou deixar duplicar\n  const hasLink = linksStored.some( link => link.id === newLink.id)\n\n  if (hasLink) {\n    console.log('Esse LINK já existe na sua lista!')\n    return;\n  }\n\n  //Adicionar esse novo link na lista..\n  linksStored.push(newLink)\n  await localStorage.setItem(key, JSON.stringify(linksStored))\n  console.log('LINK salvo com sucesso');\n}\n\n//Deletar um link já salvo."]},"metadata":{},"sourceType":"module"}